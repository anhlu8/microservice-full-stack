version: '3'
services:
  # client: #This is client react container
  #   container_name: react_client
  #   restart: always
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #     args:
  #       - NODE_IMAGE_VERSION=8.2.0-alpine
  #   networks: 
  #     - mynet
  #   expose:
  #     - 3000
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./client:/react
  #     - /react/node_modules
  #   links:
  #     - web
  web: #This is flask server container
    container_name: flask_api_server
    restart: always # NOTE research on this
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - PYTHON_IMAGE_VERSION=3.7.3-stretch
    depends_on: 
      - db
    networks: 
      - mynet
    ports:
      - "5000:5000"
    volumes:
      - /Users/anh/Desktop/containerized-app/server:/flask
    env_file: 
      - .env

  db: #This is postgres database container
    image: postgres
    volumes: # NOTE research on this
      - ./mydata/postgres:/var/lib/postgresql/data
    restart: always
    networks: 
      - mynet
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

networks: 
  mynet:

volumes:
  mydata: 